"""Implement many-to-many for works and genres

Revision ID: a8cc336466b9
Revises: 4ff5517900aa
Create Date: 2025-08-23 14:51:55.457361

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a8cc336466b9'
down_revision: Union[str, Sequence[str], None] = '4ff5517900aa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('work_genre',
    sa.Column('work_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.genre_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['work_id'], ['works.work_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('work_id', 'genre_id')
    )
    op.drop_constraint(op.f('works_genre_id_fkey'), 'works', type_='foreignkey')
    op.drop_column('works', 'genre_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('works', sa.Column('genre_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('works_genre_id_fkey'), 'works', 'genre', ['genre_id'], ['genre_id'])
    op.drop_table('work_genre')
    # ### end Alembic commands ###
